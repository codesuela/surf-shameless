// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var BlacklistReInit, changeListState, customListAdd, customListRemove, getCustomList, listInitializer, loadAvailableLists;
    loadAvailableLists = function() {
      var _this = this;
      console.log(localStorage["myAvailableLists"]);
      if (localStorage["myAvailableLists"] === "undefined" || typeof localStorage["myAvailableLists"] === "undefined") {
        console.log("set timeout");
        chrome.extension.sendRequest({
          "action": "getAvailableLists"
        }, function(response) {
          return console.log("response", response);
        });
        return setTimeout(function() {
          return loadAvailableLists();
        }, 1000);
      } else {
        return listInitializer();
      }
    };
    changeListState = function(name, state) {
      return chrome.extension.sendRequest({
        "action": "changeListState",
        "listName": name,
        "listState": state
      }, function(response) {
        return console.log(response);
      });
    };
    BlacklistReInit = function() {
      return chrome.extension.sendRequest({
        "action": "reInit"
      }, function(response) {
        return console.log(response);
      });
    };
    listInitializer = function() {
      var enabledLists, name, xhr, xhrs, _i, _len, _ref, _results;
      xhr = new XMLHttpRequest();
      console.log("list initializer start");
      if (localStorage["enabledLists"] !== void 0) {
        enabledLists = JSON.parse(localStorage["enabledLists"]);
      }
      _ref = JSON.parse(localStorage["myAvailableLists"]);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        name = _ref[_i];
        xhrs = {};
        xhr.open("GET", "lists/" + name, false);
        xhr.onreadystatechange = function() {
          var checkbox, checked, desc, listObj, row, state, tr, urls;
          if (xhr.readyState === 4) {
            listObj = JSON.parse(xhr.responseText);
            checked = "";
            state = false;
            if (enabledLists) {
              state = enabledLists[name];
              if (state) {
                checked = "checked='checked'";
              }
            }
            console.log(listObj);
            tr = $("<tr></tr>");
            checkbox = $("<td><input type='checkbox' class='list' name='n_" + name + "' list_name='" + name + "' " + checked + "/> <label for='n_" + name + "'>" + listObj.name + "</label></td> ");
            desc = $("<td><div id='desc_" + name + "'>" + listObj.description + "</div></td>");
            urls = $("<td><div id='urls_" + name + "' class='urls'> " + (listObj.content.join("<br />")) + " </div></td>");
            row = tr.append(checkbox).append(desc).append(urls);
            console.log(row);
            return $('#selected_lists > tbody:last').append(row);
          }
        };
        _results.push(xhr.send());
      }
      return _results;
    };
    loadAvailableLists();
    $(".list").live("change", function() {
      var state;
      state = $(this).is(':checked');
      return changeListState($(this).attr('list_name'), state);
    });
    getCustomList = function(type) {
      var customListName, destination, item, td, _i, _len, _ref;
      console.log("get custom list called");
      console.log(type);
      if (type === "url") {
        customListName = "myCustomUrlList";
        destination = $("#my_urls > tbody:last");
      } else if (type === "keyword") {
        customListName = "myCustomKeywordList";
        destination = $("#my_keywords > tbody:last");
      }
      if (localStorage[customListName] !== "undefined" && typeof localStorage[customListName] !== "undefined" && localStorage[customListName] !== void 0) {
        _ref = JSON.parse(localStorage[customListName]);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          td = $("<td><a class='remove_" + type + "_item' href='javascript:void(0)'>" + item + "</a>  [click to remove] </td>");
          destination.append(td);
        }
      }
      return void 0;
    };
    getCustomList("url");
    getCustomList("keyword");
    customListAdd = function(string, type) {
      var customListName, myCustomList;
      if (type === "url") {
        customListName = "myCustomUrlList";
      } else if (type === "keyword") {
        customListName = "myCustomKeywordList";
      }
      if (localStorage[customListName] === "undefined" || typeof localStorage[customListName] === "undefined" || localStorage[customListName] === void 0) {
        myCustomList = [];
      } else {
        myCustomList = JSON.parse(localStorage[customListName]);
      }
      myCustomList.push(string.replace("http://", "").replace("www.", ""));
      localStorage[customListName] = JSON.stringify(myCustomList);
      return BlacklistReInit();
    };
    customListRemove = function(string, type) {
      var customListName, listIndex, myCustomList, removeItem;
      if (type === "url") {
        customListName = "myCustomUrlList";
      } else if (type === "keyword") {
        customListName = "myCustomKeywordList";
      }
      myCustomList = JSON.parse(localStorage[customListName]);
      if (myCustomList) {
        if (type === "url") {
          removeItem = string.replace("http://", "").replace("www.", "");
        }
        if (type === "keyword") {
          removeItem = string;
        }
        listIndex = myCustomList.indexOf(removeItem);
        myCustomList.splice(listIndex, 1);
        if (myCustomList.length > 0) {
          localStorage[customListName] = JSON.stringify(myCustomList);
        } else {
          localStorage[customListName] = void 0;
        }
      }
      return BlacklistReInit();
    };
    $('.remove_url_item').live('click', function() {
      customListRemove($(this).text(), "url");
      return $(this).parent().remove();
    });
    $('.remove_keyword_item').live('click', function() {
      customListRemove($(this).text(), "keyword");
      return $(this).parent().remove();
    });
    $('#add_new_url').click(function() {
      if ($('#new_url_add').val().length === 0) {
        alert("Url field is emptry");
        return false;
      }
      customListAdd($('#new_url_add').val(), "url");
      $("#my_urls tbody").html("");
      return getCustomList("url");
    });
    return $('#add_new_keyword').click(function() {
      if ($('#new_keyword_add').val().length === 0) {
        alert("Keyword field is emptry");
        return false;
      }
      customListAdd($('#new_keyword_add').val(), "keyword");
      $("#my_keywords tbody").html("");
      return getCustomList("keyword");
    });
  });

}).call(this);
